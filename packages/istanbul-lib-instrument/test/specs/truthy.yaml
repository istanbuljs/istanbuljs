---
name: simple expression
code: |
  var x = args[0] > 0 && args[0] < 5;
  output = x;
instrumentOpts:
  reportLogic: true
tests:
  - name: covers line and one branch
    args: [-1]
    out: false
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 0]}
    branchesTrue: {'0': [0, 0]}
    statements: {'0': 1, '1': 1}

  - name: covers line, both branches, returns false
    args: [10]
    out: false
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 1]}
    branchesTrue: {'0': [1, 0]}
    statements: {'0': 1, '1': 1}

  - name: covers line, both branches, returns true
    args: [3]
    out: true
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 1]}
    branchesTrue: {'0': [1, 1]}
    statements: {'0': 1, '1': 1}

---
name: complex expression
code: |
  var x = args[0] > 0 && (args[0] < 5 || args[0] > 10);
  output = x;
instrumentOpts:
  reportLogic: true
tests:
  - name: covers line and one branch
    args: [-1]
    out: false
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 0, 0]}
    branchesTrue: {'0': [0, 0, 0]}
    statements: {'0': 1, '1': 1}

  - name: covers line, both branches, returns false
    args: [9]
    out: false
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 1, 1]}
    branchesTrue: {'0': [1, 0, 0]}
    statements: {'0': 1, '1': 1}

  - name: covers line, both branches, returns true
    args: [3]
    out: true
    lines: {'1': 1, '2': 1}
    branches: {'0': [1, 1, 0]}
    branchesTrue: {'0': [1, 1, 0]}
    statements: {'0': 1, '1': 1}

---
name: array expression with empty positions
code: |
  var x = [args[0], , args[1], ];
  output = x.indexOf(args[1]) === x.length - 1 && x[0] !== x[1];
instrumentOpts:
  reportLogic: true
tests:
  - name: covers correctly without error
    args: [1,5]
    out: true
    lines: {'1': 1, '2': 1}
    branches: { '0': [1, 1] }
    branchesTrue: {'0': [1, 1]}
    statements: {'0': 1, '1': 1}

---
name: or with object expression (bug track)
code: |
  var x = args[0] ? { foo: 1 } : { foo: 2 };
  output = x.foo;
instrumentOpts:
  reportLogic: true
tests:
  - name: covers all branches correctly
    args: [ false ]
    out: 2
    lines: {'1': 1, '2': 1}
    branches: { '0': [0, 1] }
    branchesTrue: { }
    statements: {'0': 1, '1': 1}

---
name: or with object expression (part 2)
code: |
  var x = args[0] || { foo: 2 };
  output = x.foo;
instrumentOpts:
  reportLogic: true
tests:
  - name: covers all branches correctly
    args: [ false ]
    out: 2
    lines: {'1': 1, '2': 1}
    branches: { '0': [1, 1] }
    branchesTrue: {'0': [0, 1]}
    statements: {'0': 1, '1': 1}
