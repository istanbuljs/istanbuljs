---
name: class property declaration
guard: isClassPropAvailable
code: |
  class Foo {
    bar = 1;
    uninitialized;
  }
  output = args === 1 ? new Foo().bar : args
tests:
  - name: covered
    args: 1
    out: 1
    lines: {'2': 1, '5': 1}
    statements: {'0': 1, '1': 1}
    branches: {'0': [1, 0]}
    functions: {}
  - name: not covered
    args: 2
    out: 2
    lines: {'2': 0, '5': 1}
    statements: {'0': 0, '1': 1}
    branches: {'0': [0, 1]}
    functions: {}
---
name: class private property declaration
guard: isClassPrivatePropAvailable
code: |
  class Foo {
    #bar = 1;
    get bar() { return this.#bar; }
    #uninitialized;
  }
  output = args === 1 ? new Foo().bar : args
tests:
  - name: covered
    args: 1
    out: 1
    lines: {'2': 1, '3': 1, '6': 1}
    statements: {'0': 1, '1': 1, '2': 1}
    branches: {'0': [1, 0]}
    functions: {'0': 1}
  - name: not covered
    args: 2
    out: 2
    lines: {'2': 0, '3': 0, '6': 1}
    statements: {'0': 0, '1': 0, '2': 1}
    branches: {'0': [0, 1]}
    functions: {'0': 0}
